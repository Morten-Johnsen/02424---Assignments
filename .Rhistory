stat_function(aes(colour = "4: gamma"), fun = dinvgauss, args = list(mean = invgaus.hat$par[1],dispersion = invgaus.hat$par[2]))+
stat_function(aes(colour = "5: log-normal"), fun = dlnorm, args = list(meanlog = lnorm.hat$par[1],sdlog = lnorm.hat$par[2]))+
theme_bw()+
labs(y = "", colour = "Distribution")+
scale_colour_manual(values = c("blue", "orange", "black", "red", "purple", "grey"), labels = c(paste0("Beta [AIC: ",round(2*beta.hat$objective + 2*length(beta.hat$par),3),"]"),
paste0("Normal [AIC: ",round(2*norm.hat$objective + 2*length(norm.hat$par),3),"]"),
paste0("Gamma [AIC: ",round(2*gamma.hat$objective + 2*length(gamma.hat$par),3),"]"),
paste0("Inv Gauss [AIC: ",round(2*invgaus.hat$objective + 2*length(invgaus.hat$par),3),"]"),
paste0("Log-normal [AIC: ",round(2*lnorm.hat$objective + 2*length(lnorm.hat$par),3),"]")))+
ggtitle("Clothing insulation level")
ggsave(paste0(figpath,"distribution_choice_1.png"), width = 20, height = 10, units = "cm")
#gamma is best (HUSK clo må gerne være > 1, det er ikke en fraktion).
fit.gamma <- glm(clo ~ tOut + tInOp + sex, data = c.data, family = Gamma(link = "cloglog"))
add1(object = fit.gamma, scope = ~.+tOut:sex+tInOp:sex+tOut:tInOp, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.+tOut:sex)
Anova(fit.gamma, type = "III", test = "LR")
add1(object = fit.gamma, scope = ~.+tInOp:sex+tOut:tInOp, test = "Chisq")
drop1(object = fit.gamma, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.-tInOp)
anova(fit.gamma, test = "Chisq")
Anova(fit.gamma, type = "III", test = "LR")
#goodness of fit:
pchisq(deviance(fit.gamma), df = dim(c.data)[1] - length(coefficients(fit.gamma)), lower.tail = F)
#er passende
summary(fit.gamma)
1 - pchisq(48.344,df=799) ## pass the goodness of fit.
confint(fit.gamma)
#Manuelt
glm.gamma.w <- function(theta){
y <- c.data$clo
k <- 1/theta[5]
eta <- theta[1] + theta[2] * c.data$tOut + theta[3] * as.numeric(c.data$sex == "male") + theta[4] * as.numeric(c.data$sex == "male") * c.data$tOut
mu <- 1-exp(-exp(eta))
#using deviance
#d <- 2*(y/mu - log(y/mu) - 1)
#return(1/2 * sum(w*d))
#using pdf and log-likelihood
nll <- -sum(dgamma(y, shape = k, scale = mu/k, log = T))
return(nll)
}
manual.fit <- nlminb(start = c(0,0,0,0,1), objective = glm.gamma.w)
manual.sd <- sqrt(diag(solve(hessian(func = glm.gamma.w, x = manual.fit$par))))
manual.fit$par
manual.sd
summary(fit.gamma)
#Det er mere eller mindre det samme, det er vist kun dispersion parameter der er lidt anderleedes
(AIC_manuel <- manual.fit$objective*2 + 5*2)
#manuel AIC er 0.03 bedre end glm.... det er det samme.
#### 2) residual analysis
par(mfrow=c(2,2))
postscript(file.path(getwd(), "fit.gamma.eps"), horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
#png(filename = "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/residual_analysis_1.png", width = 20, height = 10, units = "cm", res = 1000)
plot(fit.gamma, pch = 16)
dev.off()
c.data$residuals <- fit.gamma$residuals
c.data$leverage <- hatvalues(fit.gamma)
dev.off()
#gender-specific residual analysis
c.data$pred <- predict(fit.gamma)
c.data$pearson <- residuals(fit.gamma, type = "pearson")
sigma_sq <- fit.gamma$deviance / (dim(c.data)[1] - length(coefficients(fit.gamma)))
c.data$stdpearson <- c.data$pearson/sqrt(sigma_sq*(1-c.data$leverage))
first <- ggplot(c.data)+
geom_point(aes(x = pred, y = residuals))+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(aes(x = pred, y = residuals), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = "Residuals")+
ggtitle("Residuals vs Fitted")
second <- ggplot(c.data)+
geom_point(aes(x = pred, y = sqrt(stdpearson)))+
geom_smooth(aes(x=pred,y = sqrt(stdpearson)), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = TeX("$\\sqrt{Std. Pearson Residuals}$"))+
ggtitle("Scale-Location")
third <- ggplot(c.data, aes(sample = stdpearson))+
stat_qq_band(fill = "blue", alpha = 0.2)+
stat_qq_line(colour = "blue")+
stat_qq_point()+
theme_bw()+
labs(x = "Theoretical quantiles", y = "Std. Pearson Residuals")+
ggtitle("Normal QQ")
fourth <- ggplot(c.data, aes(x = leverage, y = stdpearson))+
geom_point()+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(colour = "blue", se = F)+
theme_bw()+
labs(x = "Leverage", y = "Std. Pearson Residuals")+
ggtitle("Residuals vs Leverage")
grid.arrange(first, third, second, fourth, nrow = 2)
#Check whether residuals are i.i.d.
ggplot(c.data)+
geom_boxplot(aes(x = sex, y = pearson, fill = sex))+
theme_bw()+
ggtitle("Residual variation difference between genders")
ggsave(filename = paste0(figpath,"gender_variance.png"), width = 20, height = 10, units = "cm")
#=> Residuals are not identically distributed. This will be addressed later.
par(mfrow=c(1,2))
p1 <- acf(c.data$pearson, main = "ACF pearson residuals")
p2 <- pacf(c.data$pearson, main = "PACF pearson residuals")
#=> residuals are not independent.
#### 3) Model interpretation
plot_summs(fit.gamma)+
ggtitle("Parameter estimates [95% CI]")
ggsave(filename = paste0(figpath,"forest1.png"), width = 20, height = 10, units = "cm")
summary(fit.gamma)
#### 4) Fitting the model using subjId instead of sex
c.data2 <- dplyr::select(clothing, -X)
c.data2 %<>%
mutate(subjId = factor(subjId))
fit.gamma2 <- glm(clo ~ tOut + tInOp + subjId, data = c.data2, family = Gamma(link = "cloglog"))
anova(fit.gamma2, test = "Chisq")
Anova(fit.gamma2, type = "III")
add1(object = fit.gamma2, scope = ~.+I(tOut^2)+I(tInOp^2)+tOut:tInOp+tOut:subjId+tInOp:subjId, test = "Chisq")
fit.gamma2 <- update(fit.gamma2, .~.+tOut:subjId)
drop1(fit.gamma2, test = "Chisq")
anova(fit.gamma2, test = "Chisq")
# now all terms are significant and we see if additional terms should be added
add1(object = fit.gamma2, scope = ~.+I(tOut^2)+I(tInOp^2)+tOut:tInOp+tInOp:subjId, test = "Chisq")
fit.gamma2 <- update(fit.gamma2, .~.+tInOp:subjId)
Anova(fit.gamma2, type = "III")
drop1(fit.gamma2, test = "Chisq")
#type III anova show that tInOp is now no longer significant. We keep it, as it becomes significant again later
#all terms are now significant, see if we can add more information
add1(object = fit.gamma2, scope = ~.+I(tOut^2)+I(tOut^2):subjId+I(tInOp^2)+I(tInOp^2):subjId+tOut:tInOp+tOut:tInOp:subjId, test = "Chisq")
fit.gamma2 <- update(fit.gamma2, .~.+I(tInOp^2))
Anova(fit.gamma2, type = "III")
add1(object = fit.gamma2, scope = ~.+I(tOut^2)+I(tInOp^2)+tOut:tInOp+tOut:tInOp:subjId, test = "Chisq")
drop1(object = fit.gamma2, test = "Chisq")
#all terms are significant, no further terms can be added or removed.
Anova(fit.gamma2, type = "III")
fit.gamma2 <- update(fit.gamma2, .~.-tOut)
add1(object = fit.gamma2, scope = ~.+I(tOut^2)+I(tInOp^2)+tOut:tInOp+tOut:tInOp:subjId, test = "Chisq")
drop1(object = fit.gamma2, test = "Chisq")
summary(fit.gamma2)
#subject id is highly significant -> normally this would be an indicator to use a mixed model instead.
#the residual deviance for this model is a lot lower than for the sex-based model above.
1 - pchisq(12.715,df=661) ## pass the goodness of fit.
#### 5) Residual analysis including within day autocorrelation
c.data2$pearson <- residuals(fit.gamma2, type = "pearson")
ggplot(c.data2)+
geom_boxplot(aes(x = subjId, y = pearson, fill = sex))+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(y = "Pearson residual", x = "Subject ID")
ggsave(paste0(figpath,"residual_subjid2.png"), width = 20, height = 10, units = "cm")
#still not constant residual variance as variations can be seen based on the subjId
c.data2$residuals <- fit.gamma2$residuals
c.data2$leverage <- hatvalues(fit.gamma2)
#gender-specific residual analysis
c.data2$pred <- predict(fit.gamma2)
sigma_sq <- fit.gamma2$deviance / (dim(c.data2)[1] - length(coefficients(fit.gamma2)))
c.data2$stdpearson <- c.data2$pearson/sqrt(sigma_sq*(1-c.data2$leverage))
first <- ggplot(c.data2)+
geom_point(aes(x = pred, y = residuals))+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(aes(x = pred, y = residuals), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = "Residuals")+
ggtitle("Residuals vs Fitted")
second <- ggplot(c.data2)+
geom_point(aes(x = pred, y = sqrt(stdpearson)))+
geom_smooth(aes(x=pred,y = sqrt(stdpearson)), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = TeX("$\\sqrt{Std. Pearson Residuals}$"))+
ggtitle("Scale-Location")
third <- ggplot(c.data2, aes(sample = stdpearson))+
stat_qq_band(fill = "blue", alpha = 0.2)+
stat_qq_line(colour = "blue")+
stat_qq_point()+
theme_bw()+
labs(x = "Theoretical quantiles", y = "Std. Pearson Residuals")+
ggtitle("Normal QQ")
fourth <- ggplot(c.data2, aes(x = leverage, y = stdpearson))+
geom_point()+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(colour = "blue", se = F)+
theme_bw()+
labs(x = "Leverage", y = "Std. Pearson Residuals")+
ggtitle("Residuals vs Leverage")
png(filename = paste0(figpath,"residual_analysis_2.png"), width = 20, height = 10, units = "cm", res = 1000)
grid.arrange(first, third, second, fourth, nrow = 2)
dev.off()
#again the residuals are fairly well-behaved as compared to the predicted values
#showing a few outliers, but all residuals are within cooks distance.
#the qqplot show poor normality. Even when accounting for 95% CIs.
qqPlot(residuals(fit.gamma2))
#looking at the within day autocorrelation to examine independency.
par(mfrow=c(1,2))
acf(residuals(fit.gamma2, type = "pearson"), main = "ACF")
pacf(residuals(fit.gamma2, type = "pearson"), main = "PACF")
#still seeing overall autocorrelation
acf <- c()
lag <- c()
subject <- c()
for (i in unique(c.data2$subjId)){ # Loop over subjects
# Take out data for that subject
c.data2 %>%
filter(subjId == i) -> tmp
for (j in unique(tmp$day)){ # Loop over different days that the subject has been at work
# Look at that specific day, calculate acf
tmp %>%
filter(day == j) %>%
arrange(time) %>%
select(pearson) %>%
acf(plot = F) -> acf.tmp
# Save acf value for that subject on that day
acf <- c(acf, acf.tmp$acf)
lag <- c(lag, 0:(length(acf.tmp$acf)-1))
subject <- c(subject, rep(i, length(acf.tmp$acf)))
}
}
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect)
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect)
earinfect
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect,link = "sqrt")
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect,link = "log")
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect,link = "identity")
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect)
summary(fitnb)
str(earinfect)
earinfect$swimmer == "Freq"
data.frame(swimmer = as.integer(earinfect$swimmer == "Freq"))
earinfect
earinfect2 <- data.frame(swimmer = as.integer(earinfect$swimmer == "Freq"),
location = as.integer(earinfect$location == "Beach"),
age = as.integer(earinfect$age == "20-24"),
sex = as.integer(earinfect$sex == "Female"),
infections = earinfect$infections,
persons = earinfect$persons)
earinfect$age == "25-29"
earinfect2$age[earinfect$age == "25-29"] = 2
earinfect2
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect2)
earinfect2 <- data.frame(swimmer = as.integer(earinfect$swimmer == "Freq"),
location = as.integer(earinfect$location == "Beach"),
age = as.integer(earinfect$age == "20-24"),
sex = as.integer(earinfect$sex == "Female"),
infections = earinfect$infections,
persons = earinfect$persons)
earinfect2$age[earinfect$age == "25-29"] = 2
fitnb <- glm.nb(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect2)
fit.pois.full
fit.pois <- glm(infections ~ offset(log(persons)) + age * sex * location * swimmer, data = earinfect, family = poisson)
fit.pois.full <- fit.pois
fit.pois.full
# negative binomial -------------------------------------------------------
fit.pois.full
# negative binomial -------------------------------------------------------
coef(fit.pois.full)
# negative binomial -------------------------------------------------------
coefficients(fit.pois.full)
earinfect2 <- data.frame(swimmer = as.integer(earinfect$swimmer == "Freq"),
location = as.integer(earinfect$location == "Beach"),
age = as.integer(earinfect$age == "20-24"),
sex = as.integer(earinfect$sex == "Female"),
infections = earinfect$infections,
persons = earinfect$persons)
earinfect2
fit.pois.full
fit.pois <- glm(infections ~ offset(log(persons)) + age * sex * location * swimmer, data = earinfect, family = poisson)
fit.pois.full <- fit.pois
fit.pois.full
summary(fit.pois.full)
1-pqhisq(3.3307e-15 ,0)
1-pchisq(3.3307e-15 ,0)
1-pchisq(3.3307e-15, 0)
earinfect¨
earinfect
anova(fit.pois, test = "Chisq")
drop1(fit.pois)
rm(list=ls())
library(GGally)
library(qqplotr)
library(corrplot)
library(car)
library(reshape)
library(tidyverse)
library(magrittr)
library(dplyr)
library(betareg)
library(statmod)
library(jtools)
library(numDeriv)
library(latex2exp)
library(broom.mixed)
library(car)
rm(list=ls())
library(GGally)
library(qqplotr)
library(corrplot)
library(car)
library(reshape)
library(tidyverse)
library(magrittr)
library(dplyr)
library(betareg)
library(statmod)
library(jtools)
library(numDeriv)
library(latex2exp)
library(broom.mixed)
library(car)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
figpath <- ":/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/Assignment 2/figs/"
}
# Load of data
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
head(earinfect)
# Look at data
summary(earinfect)
earinfect[,sum(persons), by = swimmer]
earinfect[, sum(persons), by =location]
earinfect[, sum(persons), by=age]
# Look at data
data <- as.data.table(earinfect)
summary(data)
library(data.table)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
figpath <- ":/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/Assignment 2/figs/"
}
# Load of data
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
head(earinfect)
# Look at data
data <- as.data.table(earinfect)
summary(data)
data[,sum(persons), by = swimmer]
data[, sum(persons), by =location]
data[, sum(persons), by=age]
data[, sum(persons), by = sex]
data[persons == max(persons)]
data[,freq := infections/persons]
data[freq==max(freq)]
earinfect$swimmer <- factor(earinfect$swimmer)
earinfect$location <- factor(earinfect$location)
earinfect$age <- factor(earinfect$age, ordered = T)
earinfect$sex <- factor(earinfect$sex)
earinfect$healthy <- earinfect$persons - earinfect$infections
hist(earinfect$infections)
ggpairs(earinfect)
hist(earinfect$infections)
hist(earinfect$infections)
ggpairs(earinfect)
ggplot(earinfect) +
geom_histogram(aes(x = infections, y = after_stat(density)), bins = 15,  colour = "white", position = "identity", alpha = 0.4) +
theme_bw() +
labs(y = "", colour = "Distribution", title = "Earinfections")
ggsave(paste0(figpath,"Cearinfect.png"), width = 20, height = 10, units = "cm")
# Is there any difference in mean and variance of infections variable?
mean(earinfect$infections)
var(earinfect$infections)
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <,- glm(infections ~ offset(persons) + age * sex * location * swimmer,
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:sex:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-sex:location:swimmer)
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:sex:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
anova(fit.pois, test = "Chisq")
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:sex:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
fit.pois <- glm(infections ~ offset(persons) + age * sex * location * swimmer,
data = earinfect, family = poisson(link = 'log'))
fit.pois_full <- fit.pois
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
coefficients(fit.pois)
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
# Drop the largest interaction
fit.pois <- update(fit.pois, .~.-age:sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:sex:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-sex:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:location:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
fit.pois <- update(fit.pois, .~.-age:swimmer)
1 - pchisq(fit.pois$deviance, df = fit.pois$df.residual)
length(coefficients(fit.pois))
anova(fit.pois, test = "Chisq")
drop1(fit.pois, test = "Chisq")
anova(fit.pois, test = "Chisq")
length(coefficients(fit.pois))
# Looks good now
summary(fit.pois)
# Compare the reduced with full model
anova(fit.pois, fit.pois_full, test = "Chisq")
