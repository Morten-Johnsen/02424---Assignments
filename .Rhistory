#7)
# Look at the passive variables to choose some interactions to model
dioxin %>%
select(logDiox, TIME,# PLANT_RENO_S - is 0 in PLANT_RENO_N
, QROEG,TOVN,TROEG,POVN,CO2,logCO,SO2,logHCL,H2O) %>%
ggpairs()
dioxin
#7)
# Look at the passive variables to choose some interactions to model
dioxin %>%
select(logDiox, # PLANT_RENO_S - is 0 in PLANT_RENO_N
, QROEG,TOVN,TROEG,POVN,CO2,logCO,SO2,logHCL,H2O) %>%
ggpairs()
#7)
# Look at the passive variables to choose some interactions to model
dioxin %>%
select(logDiox # PLANT_RENO_S - is 0 in PLANT_RENO_N
, QROEG,TOVN,TROEG,POVN,CO2,logCO,SO2,logHCL,H2O) %>%
ggpairs()
#7)
# Look at the passive variables to choose some interactions to model
dioxin %>%
dplyr::select(logDiox # PLANT_RENO_S - is 0 in PLANT_RENO_N
, QROEG,TOVN,TROEG,POVN,CO2,logCO,SO2,logHCL,H2O) %>%
ggpairs()
add1(fit_obs1, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
fit7 <- update(fit3_1, .~. + logHCL,data=dioxin)
# Add logHCL to model
fit7 <- update(fit3_1, .~. + logHCL,data=dioxin)
summary(fit7)
# Add logHCL to model
fit_pas1 <- update(fit_obs1, .~. + logHCL,data=dioxin)
summary(fit_pas1)
# Add logHCL to model, because it is the most significant addition
fit_pas1 <- update(fit_obs1, .~. + logHCL,data=dioxin)
summary(fit_pas1)
# Look at different additions to the model
add1(fit_obs1, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
add1(fit_pas1, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
# Add logHCL to model, because it is the most significant addition
fit_pas1 <- update(fit_obs1, .~. + logHCL,data=dioxin)
summary(fit_pas1)
add1(fit_pas1, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
add1(fit_pas1, scope=~.+TROEG
,test="F")
fit_pas2 <- update(fit_pas1, .~. + TROEG,data=dioxin)
summary(fit_pas2)
# Check difference in models
anova(fit_pas1,fit_pas2)
# Add TROEG to model, because it is the most significant addition
fit_pas2 <- update(fit_pas1, .~. + TROEG,data=dioxin)
summary(fit_pas2)
# Check difference in models
anova(fit_pas1,fit_pas2)
add1(fit_pas2, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
# Add CO2 to model, because it is the most significant addition
fit_pas3 <- update(fit_pas2, .~. + CO2,data=dioxin)
summary(fit_pas3)
anova(fit_pas2,fit_pas3)
add1(fit_pas3, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
# Add POVN to model, because it is the most significant addition
fit_pas4 <- update(fit_pas3, .~. + POVN,data=dioxin)
summary(fit_pas4)
# Check difference in models
anova(fit_pas3,fit_pas4)
add1(fit_pas4, scope=~.+QROEG+TOVN+TROEG+POVN+CO2+logCO+SO2+logHCL+H2O+I(QROEG^2)+I(TOVN^2)+
I(TROEG^2)+I(POVN^2)+I(CO2^2)+I(logCO^2)+I(SO2^2)+I(logHCL^2)+I(H2O^2)+
I(QROEG*TOVN)+I(QROEG*TROEG)+I(QROEG*POVN)+I(QROEG*SO2)+I(QROEG*H2O)+
I(TOVN*CO2)+I(TROEG*logCO)+I(TROEG*SO2)+I(TROEG*logHCL)+I(TROEG*H2O)+
I(CO2*H2O)+I(SO2*H2O)
,test="F")
plot(fit_pas4)
plot(fit_pas4)
par(mfrow=c(2,2))
plot(fit_pas4)
dioxin
# 9)
dioxin[dioxin$LAB=="KK"]
dioxin$LAB=="KK"
# 9)
dioxin[dioxin$LAB=="KK",]
# 9)
var(dioxin[dioxin$LAB=="KK",]$DIOX)
var(dioxin[dioxin$LAB=="USA",]$DIOX)
1/var(dioxin[dioxin$LAB=="USA",]$DIOX)
# 9)
1/var(dioxin[dioxin$LAB=="KK",]$DIOX)
1/var(dioxin[dioxin$LAB=="USA",]$DIOX)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$DIOX)
1/sd(dioxin[dioxin$LAB=="USA",]$DIOX)
sd(dioxin[dioxin$LAB=="KK",]$DIOX)
sd(dioxin[dioxin$LAB=="USA",]$DIOX)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$DIOX)
1/sd(dioxin[dioxin$LAB=="USA",]$DIOX)
1/var(dioxin[dioxin$LAB=="KK",]$DIOX)
1/var(dioxin[dioxin$LAB=="USA",]$DIOX)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$DIOX)
1/sd(dioxin[dioxin$LAB=="USA",]$DIOX)
sd(dioxin[dioxin$LAB=="KK",]$DIOX)
sd(dioxin[dioxin$LAB=="USA",]$DIOX)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$logDIOX)
1/sd(dioxin[dioxin$LAB=="USA",]$logDIOX)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$logDiox)
1/sd(dioxin[dioxin$LAB=="USA",]$logDiox)
sd(dioxin[dioxin$LAB=="KK",]$logDiox)
sd(dioxin[dioxin$LAB=="USA",]$logDiox)
# 9)
1/sd(dioxin[dioxin$LAB=="KK",]$logDiox)
1/sd(dioxin[dioxin$LAB=="USA",]$logDiox)
rm(list=ls())
library(GGally)
library(corrplot)
library(car)
library(MASS)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
source("DataPrep.R")
Trans.eq1 <- function(lambda, y = dioxin$DIOX){
y_lambda <- ((y)^lambda - 1)/lambda#, lambda > 0
return(y_lambda)
}
lambda_NLL <- function(theta, y = dioxin$DIOX){
lambda <- theta[1]
y_lambda <- Trans.eq1(lambda, y)
mu <- theta[2]#mean(y_lambda)
sigma <- theta[3]#sd(y_lambda)
NLL <- -sum(-1/2*log(sigma^2) - (y_lambda-mu)^2 / (2*sigma^2) + (lambda - 1)*log(y))
return(NLL)
}
theta.hat <- nlminb(start=c(1, 0, 1), objective = lambda_NLL)
lambda.hat <- round(theta.hat$par[1], 3)
mu.hat <- round(theta.hat$par[2], 3)
sd.hat <- round(theta.hat$par[3], 3)
#See if the boxcox transformation is significantly different from the log-transformation
pf_lambda <- function(lambda, y = dioxin$DIOX){
n <- length(y)
y_lambda <- Trans.eq1(lambda)
sd <- sd(y_lambda)
ll <- -n/2 * log(sd^2) - n/2 + (lambda - 1)* sum(log(y))
return(-ll)
}
lambda_interval <- seq(-.5,0.1,0.003)
pf_curve <- -sapply(lambda_interval, FUN = pf_lambda)-max(-sapply(lambda_interval, FUN = pf_lambda))
plot(lambda_interval
,pf_curve, type = "l", main = TeX("Profile Likelihood for \\lambda")
,ylim = c(-3,0))
grid()
abline(v = lambda.hat, lty = 2)
alpha <- 0.05
c <- -0.5 * qchisq(1-alpha, df = 1)
abline(h = c, col = "red")
#95% profilelikelihood CI for lambda include 0 and thus a log-transformation is sufficient and to be preferred over the boxcox.
#wald CI for confirmation:
sd_reg <- sqrt(diag(solve(hessian(func = lambda_NLL, x = theta.hat$par))))
lambda.hat + qt(c(alpha/2, 1-alpha/2), df = length(dioxin$DIOX) - 1) * sd_reg[1]
dioxin$DIOX_boxcox <- Trans.eq1(lambda.hat, dioxin$DIOX)
hist(dioxin$DIOX_boxcox, breaks = 5)
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
dioxin %>%
dplyr::select(logDiox, TIME, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# Plot ordinal values versus the actually measured values
dioxin %>%
dplyr::select(OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# Plot ordinal values versus the actually measured values
dioxin %>%
dplyr::select(logDiox, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# Plot the values used in the first models:
# Block values and the active values (ordinal)
dioxin %>%
dplyr::select(logDiox, TIME, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
ggpairs()
# Plot ordinal values versus the actually measured values
dioxin %>%
dplyr::select(logDiox, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# Plot the values used in the first models:
# Block values and the active values (ordinal)
dioxin %>%
dplyr::select(logDiox, TIME, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
ggpairs()
# Plot the values used in the first models:
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
#, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
# Plot the values used in the first models:
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
#, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
# Plot the values used in the first models:
par(mfrow=c(1,1))
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
#, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
dioxin
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV -DIOX_boxcox) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV, -DIOX_boxcox) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
# TODO Color code passive vs active, and measured vs. ordinal
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV, -DIOX_boxcox) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
# Plot ordinal values versus the actually measured values
dioxin %>%
dplyr::select(logDiox, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
table(PLANT)
table(dioxin$PLANT)
table(dioxin$LAB)
# Plot ordinal values versus the actually measured values
dioxin %>%
dplyr::select(logDiox, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# Plot the values used in the first models:
par(mfrow=c(1,1))
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
# Plot the values used in the first models:
par(mfrow=c(1,1))
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
#, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
# Plot the values used in the second models:
# Block values and the active values (measured)
dioxin %>%
dplyr::select(logDiox, TIME, LAB
, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, O2, O2COR, NEFFEKT, QRAT) %>%
ggpairs()
# TODO Color code passive vs active, and measured vs. ordinal
dioxin %>%
dplyr::select(-PLANT, -LAB, -OXYGEN, -LOAD, -PRSEK, -OBSERV, -DIOX_boxcox) %>%
melt() %>%
ggplot()+
geom_histogram(aes(x = value), bins = 10)+
facet_wrap(~variable, scales = "free")
# TODO: Do this to the ones not in the plot
table(dioxin$PLANT)
table(dioxin$LAB)
# Make correlation plot of all variables:
#       - Ordinal vs. measured
#       - Variables in first model
#       - Variables in second model
par(mfrow=c(1,1))
dioxin %>%
dplyr::select(logDiox#, TIME#, LAB
#, PLANT # PLANT_RENO_S - is 0 in PLANT_RENO_N
, OXYGEN_Ordinal
, LOAD_Ordinal
, PRSEK_Ordinal) %>%
cor() %>%
corrplot()
# Model(s) ----------------------------------------------------------------
names(dioxin)
#Block effects: PLANT (3 plants, RENO_N, RENO_S and KARA), TIME (For RENO_N the experiment
#was repeated at a later time point, 2, as well.), LAB (Two labs. One in DK and one in USA)
#considerable measurement noise is expected.
#Active variables:
#   "Theoretical": OXYGEN, LOAD, PRSEK.
#   "Measured": O2 (O2COR), NEFFEKT, QRAT
#### 2) ####
fit <- lm(logDiox ~ PLANT + TIME + LAB + LOAD_Ordinal + OXYGEN_Ordinal + PRSEK_Ordinal, data = dioxin)
#plot(fit)
drop1(fit, test = "F")
#Block effects: PLANT (3 plants, RENO_N, RENO_S and KARA), TIME (For RENO_N the experiment
#was repeated at a later time point, 2, as well.), LAB (Two labs. One in DK and one in USA)
#considerable measurement noise is expected.
#Active variables:
#   "Theoretical": OXYGEN, LOAD, PRSEK.
#   "Measured": O2 (O2COR), NEFFEKT, QRAT
#### 2) ####
fit <- lm(logDiox ~ PLANT + TIME + LAB + LOAD_Ordinal + OXYGEN_Ordinal + PRSEK_Ordinal, data = dioxin)
#plot(fit)
drop1(fit, test = "F")
fit2 <- update(fit, .~.-PRSEK_Ordinal)
drop1(fit2, test = "F")
anova(fit, fit2)
fit2
summary(fit2)
confint(fit2)
#### 3) ####
fit_obs <- lm(logDiox ~ O2COR + NEFFEKT + QRAT + PLANT + TIME + LAB, data = dioxin)
summary(fit_obs)
Anova(fit_obs, type = "III")
drop1(fit_obs, test = "F")
fit_obs1 <- update(fit_obs, .~.-QRAT)
drop1(fit_obs1, test = "F")
anova(fit_obs, fit_obs1) #model performance are the same
fit_obs1
#### 3) ####
fit_obs <- lm(logDiox ~ O2COR + NEFFEKT + QRAT + PLANT + TIME + LAB, data = dioxin)
summary(fit_obs)
Anova(fit_obs, type = "III")
drop1(fit_obs, test = "F")
fit_obs1 <- update(fit_obs, .~.-QRAT)
drop1(fit_obs1, test = "F")
fit_obs1
csummary(fit_obs1)
summary(fit_obs1)
fit_obs1
confint(0.002012)
confint(fit_obs1)
plot(fit2)
par(mfrow=c(2,2))
plot(fit2)
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special")
par(mfrow=c(2,2))
plot(fit2)
dev.off()
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
par(mfrow=c(2,2))
plot(fit2)
dev.off()
plot(fit2,cex=1.5)
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
par(mfrow=c(2,2))
plot(fit2,cex=1.5)
dev.off()
plot(fit2,cex=2)
text(cex=2)
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
par(mfrow=c(2,2))
plot(fit2)
dev.off()
plot(fit2,cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(fit2,cex.lab=1.5, cex.axis=1.5, cex.main=2, cex.sub=1.5)
plot(fit2,cex.lab=1.5, cex.axis=1.5, cex.main=2, cex.sub=2)
plot(fit2,cex.lab=1.9, cex.axis=1.3, cex.main=2, cex.sub=2)
plot(fit2,cex.lab=1.3, cex.axis=1.5, cex.main=2, cex.sub=2)
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
par(mfrow=c(2,2))
plot(fit2,cex.lab=1.3, cex.axis=1.5, cex.main=2, cex.sub=2)
dev.off()
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 11)
par(mfrow=c(2,2))
plot(fit2,cex.lab=1.3, cex.axis=1.5, cex.main=2, cex.sub=2)
dev.off()
plot(fit2,cex.lab=1.2, cex.axis=1.5, cex.main=2, cex.sub=2)
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 11)
par(mfrow=c(2,2))
plot(fit2,cex.lab=1.2, cex.axis=1.5, cex.main=2, cex.sub=2)
dev.off()
postscript("residualplotsFirstModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 11)
par(mfrow=c(2,2))
plot(fit2,cex.lab=1.3, cex.axis=1.3, cex.main=2, cex.sub=2)
dev.off()
plot(fit2,cex.lab=1.3, cex.axis=1.3, cex.main=2, cex.sub=2)
#### 3) ####
fit_obs <- lm(logDiox ~ O2COR + NEFFEKT + QRAT + PLANT + TIME + LAB, data = dioxin)
summary(fit_obs)
Anova(fit_obs, type = "III")
drop1(fit_obs, test = "F")
fit_obs1 <- update(fit_obs, .~.-QRAT)
drop1(fit_obs1, test = "F")
anova(fit_obs, fit_obs1) #model performance are the same
Anova(fit_obs1, type = "III") #type 3 anova
summary(fit_obs1)
plot(fit_obs1)
par(mfrow=c(1,1))
qqPlot(fit_obs1)
confint(fit_obs1, level = 0.99)
dioxin[c(13,24,11,20),] %>%
dplyr::select(PLANT, LAB, TIME, NEFFEKT, O2COR, logDiox)
dioxin$outlier <- "No"
dioxin$outlier[c(13,24,11,20)] <- "Yes"
dioxin$chrLog <- as.character(round(dioxin$logDiox,2))
library(gghighlight)
ggplot(dioxin)+
geom_point(aes(x = PRSEK, y = logDiox, fill = outlier))+
gghighlight(outlier == "Yes", label_key = chrLog)
postscript("residualplotsSecondModel.eps", horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 11)
par(mfrow=c(2,2))
plot(fit_obs1,cex.lab=1.3, cex.axis=1.3, cex.main=2, cex.sub=2)
dev.off()
plot(fit_obs1,cex.lab=1.3, cex.axis=1.3, cex.main=2, cex.sub=2)
par(mfrow=c(2,2))
plot(fit_obs1,cex.lab=1.3, cex.axis=1.3, cex.main=2, cex.sub=2)
