library(reshape)
library(tidyverse)
library(magrittr)
library(dplyr)
library(betareg)
library(statmod)
library(jtools)
library(numDeriv)
library(latex2exp)
library(broom.mixed)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
"hej"+"bej"
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "Assignment2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment2/figs/"
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
dev.off()
dev.off()
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
paste0(figpath,"clothing_data_histograms.png")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
#### 1) Distributions
beta.dist <- function(theta){
return(-sum(dbeta(c.data$clo, shape1 = theta[1], shape2 = theta[2], log = T)))
}
norm.dist <- function(theta){
return(-sum(dnorm(c.data$clo, mean = theta[1], sd = theta[2], log = T)))
}
gamma.dist <- function(theta){
return(-sum(dgamma(c.data$clo, shape = theta[1], rate = theta[2], log = T)))
}
invgaus.dist <- function(theta){
return(-sum(dinvgauss(c.data$clo, mean = theta[1], dispersion = theta[2], log =T)))
}
lnorm.dist <- function(theta){
return(-sum(dlnorm(x=c.data$clo, meanlog = theta[1], sdlog = theta[2], log = T)))
}
beta.hat <- nlminb(start = c(1,1), objective = beta.dist)
norm.hat <- nlminb(start = c(1,1), objective = norm.dist)
gamma.hat <- nlminb(start = c(1,1), objective = gamma.dist)
invgaus.hat <- nlminb(start = c(1,1), objective = invgaus.dist)
lnorm.hat <- nlminb(start = c(1,1), objective = lnorm.dist)
ggplot(c.data)+
geom_histogram(aes(x = clo, y = after_stat(density)), colour = "white", position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
stat_function(aes(colour = "1: beta"), fun = dbeta, args = list(shape1 = beta.hat$par[1],shape2 = beta.hat$par[2]))+
stat_function(aes(colour = "2: normal"), fun = dnorm, args = list(mean = norm.hat$par[1], sd = norm.hat$par[2]))+
stat_function(aes(colour = "3: gamma"), fun = dgamma, args = list(shape = gamma.hat$par[1],rate = gamma.hat$par[2]))+
stat_function(aes(colour = "4: gamma"), fun = dinvgauss, args = list(mean = invgaus.hat$par[1],dispersion = invgaus.hat$par[2]))+
stat_function(aes(colour = "5: log-normal"), fun = dlnorm, args = list(meanlog = lnorm.hat$par[1],sdlog = lnorm.hat$par[2]))+
theme_bw()+
labs(y = "", colour = "Distribution")+
scale_colour_manual(values = c("blue", "orange", "black", "red", "purple", "grey"), labels = c(paste0("Beta [AIC: ",round(2*beta.hat$objective + 2*length(beta.hat$par),3),"]"),
paste0("Normal [AIC: ",round(2*norm.hat$objective + 2*length(norm.hat$par),3),"]"),
paste0("Gamma [AIC: ",round(2*gamma.hat$objective + 2*length(gamma.hat$par),3),"]"),
paste0("Inv Gauss [AIC: ",round(2*invgaus.hat$objective + 2*length(invgaus.hat$par),3),"]"),
paste0("Log-normal [AIC: ",round(2*lnorm.hat$objective + 2*length(lnorm.hat$par),3),"]")))+
ggtitle("Clothing insulation level")
ggsave(paste0(figpath,"distribution_choice_1.png"), width = 20, height = 10, units = "cm")
#gamma is best (HUSK clo må gerne være > 1, det er ikke en fraktion).
fit.gamma <- glm(clo ~ tOut + tInOp + sex, data = c.data, family = Gamma(link = "cloglog"))
add1(object = fit.gamma, scope = ~.+tOut:sex+tInOp:sex+tOut:tInOp, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.+tOut:sex)
rm(list=ls())
library(GGally)
library(qqplotr)
library(corrplot)
library(car)
library(reshape)
library(tidyverse)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
#### 1) Distributions
beta.dist <- function(theta){
return(-sum(dbeta(c.data$clo, shape1 = theta[1], shape2 = theta[2], log = T)))
}
norm.dist <- function(theta){
return(-sum(dnorm(c.data$clo, mean = theta[1], sd = theta[2], log = T)))
}
gamma.dist <- function(theta){
return(-sum(dgamma(c.data$clo, shape = theta[1], rate = theta[2], log = T)))
}
invgaus.dist <- function(theta){
return(-sum(dinvgauss(c.data$clo, mean = theta[1], dispersion = theta[2], log =T)))
}
lnorm.dist <- function(theta){
return(-sum(dlnorm(x=c.data$clo, meanlog = theta[1], sdlog = theta[2], log = T)))
}
beta.hat <- nlminb(start = c(1,1), objective = beta.dist)
norm.hat <- nlminb(start = c(1,1), objective = norm.dist)
gamma.hat <- nlminb(start = c(1,1), objective = gamma.dist)
invgaus.hat <- nlminb(start = c(1,1), objective = invgaus.dist)
lnorm.hat <- nlminb(start = c(1,1), objective = lnorm.dist)
ggplot(c.data)+
geom_histogram(aes(x = clo, y = after_stat(density)), colour = "white", position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
stat_function(aes(colour = "1: beta"), fun = dbeta, args = list(shape1 = beta.hat$par[1],shape2 = beta.hat$par[2]))+
stat_function(aes(colour = "2: normal"), fun = dnorm, args = list(mean = norm.hat$par[1], sd = norm.hat$par[2]))+
stat_function(aes(colour = "3: gamma"), fun = dgamma, args = list(shape = gamma.hat$par[1],rate = gamma.hat$par[2]))+
stat_function(aes(colour = "4: gamma"), fun = dinvgauss, args = list(mean = invgaus.hat$par[1],dispersion = invgaus.hat$par[2]))+
stat_function(aes(colour = "5: log-normal"), fun = dlnorm, args = list(meanlog = lnorm.hat$par[1],sdlog = lnorm.hat$par[2]))+
theme_bw()+
labs(y = "", colour = "Distribution")+
scale_colour_manual(values = c("blue", "orange", "black", "red", "purple", "grey"), labels = c(paste0("Beta [AIC: ",round(2*beta.hat$objective + 2*length(beta.hat$par),3),"]"),
paste0("Normal [AIC: ",round(2*norm.hat$objective + 2*length(norm.hat$par),3),"]"),
paste0("Gamma [AIC: ",round(2*gamma.hat$objective + 2*length(gamma.hat$par),3),"]"),
paste0("Inv Gauss [AIC: ",round(2*invgaus.hat$objective + 2*length(invgaus.hat$par),3),"]"),
paste0("Log-normal [AIC: ",round(2*lnorm.hat$objective + 2*length(lnorm.hat$par),3),"]")))+
ggtitle("Clothing insulation level")
ggsave(paste0(figpath,"distribution_choice_1.png"), width = 20, height = 10, units = "cm")
#gamma is best (HUSK clo må gerne være > 1, det er ikke en fraktion).
fit.gamma <- glm(clo ~ tOut + tInOp + sex, data = c.data, family = Gamma(link = "cloglog"))
add1(object = fit.gamma, scope = ~.+tOut:sex+tInOp:sex+tOut:tInOp, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.+tOut:sex)
Anova(fit.gamma, type = "III", test = "LR")
add1(object = fit.gamma, scope = ~.+tInOp:sex+tOut:tInOp, test = "Chisq")
drop1(object = fit.gamma, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.-tInOp)
anova(fit.gamma, test = "Chisq")
Anova(fit.gamma, type = "III", test = "LR")
#goodness of fit:
pchisq(deviance(fit.gamma), df = dim(c.data)[1] - length(coefficients(fit.gamma)), lower.tail = F)
#er passende
summary(fit.gamma)
1 - pchisq(48.344,df=799) ## I.e. fail the goodness of fit test
c.data
#### 2) residual analysis
par(mfrow=c(2,2))
postscript(file.path(getwd(), "fit.gamma.eps"), horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
#png(filename = "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/residual_analysis_1.png", width = 20, height = 10, units = "cm", res = 1000)
plot(fit.gamma, pch = 16)
#dev.off()
c.data$residuals <- fit.gamma$residuals
c.data$leverage <- hatvalues(fit.gamma)
#gender-specific residual analysis
c.data$pred <- predict(fit.gamma)
c.data$pearson <- residuals(fit.gamma, type = "pearson")
sigma_sq <- fit.gamma$deviance / (dim(c.data)[1] - length(coefficients(fit.gamma)))
c.data$stdpearson <- c.data$pearson/sqrt(sigma_sq*(1-c.data$leverage))
first <- ggplot(c.data)+
geom_point(aes(x = pred, y = residuals))+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(aes(x = pred, y = residuals), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = "Residuals")+
ggtitle("Residuals vs Fitted")
second <- ggplot(c.data)+
geom_point(aes(x = pred, y = sqrt(stdpearson)))+
geom_smooth(aes(x=pred,y = sqrt(stdpearson)), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = TeX("$\\sqrt{Std. Pearson Residuals}$"))+
ggtitle("Scale-Location")
third <- ggplot(c.data, aes(sample = stdpearson))+
stat_qq_band(fill = "blue", alpha = 0.2)+
stat_qq_line(colour = "blue")+
stat_qq_point()+
theme_bw()+
labs(x = "Theoretical quantiles", y = "Std. Pearson Residuals")+
ggtitle("Normal QQ")
fourth <- ggplot(c.data, aes(x = leverage, y = stdpearson))+
geom_point()+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(colour = "blue", se = F)+
theme_bw()+
labs(x = "Leverage", y = "Std. Pearson Residuals")+
ggtitle("Residuals vs Leverage")
grid.arrange(first, third, second, fourth, nrow = 2)
#Check whether residuals are i.i.d.
ggplot(c.data)+
geom_boxplot(aes(x = sex, y = pearson, fill = sex))+
theme_bw()+
ggtitle("Residual variation difference between genders")
#Check whether residuals are i.i.d.
ggplot(c.data)+
geom_boxplot(aes(x = sex, y = pearson, fill = sex))+
theme_bw()+
ggtitle("Residual variation difference between genders")
dev.off()
dev.off()
dev.off()
#Check whether residuals are i.i.d.
ggplot(c.data)+
geom_boxplot(aes(x = sex, y = pearson, fill = sex))+
theme_bw()+
ggtitle("Residual variation difference between genders")
ggsave(filename = paste0(figpath,"gender_variance.png"), width = 20, height = 10, units = "cm")
grid.arrange(first, third, second, fourth, nrow = 2)
library(grid)
grid.arrange(first, third, second, fourth, nrow = 2)
library(GGplot2)
library(ggplot2)
grid.arrange(first, third, second, fourth, nrow = 2)
library(gridExtra)
library(grid)
grid.arrange(first, third, second, fourth, nrow = 2)
first <- ggplot(c.data2)+
geom_point(aes(x = pred, y = residuals))+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(aes(x = pred, y = residuals), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = "Residuals")+
ggtitle("Residuals vs Fitted")
second <- ggplot(c.data2)+
geom_point(aes(x = pred, y = sqrt(stdpearson)))+
geom_smooth(aes(x=pred,y = sqrt(stdpearson)), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = TeX("$\\sqrt{Std. Pearson Residuals}$"))+
ggtitle("Scale-Location")
third <- ggplot(c.data2, aes(sample = stdpearson))+
stat_qq_band(fill = "blue", alpha = 0.2)+
stat_qq_line(colour = "blue")+
stat_qq_point()+
theme_bw()+
labs(x = "Theoretical quantiles", y = "Std. Pearson Residuals")+
ggtitle("Normal QQ")
fourth <- ggplot(c.data2, aes(x = leverage, y = stdpearson))+
geom_point()+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(colour = "blue", se = F)+
theme_bw()+
labs(x = "Leverage", y = "Std. Pearson Residuals")+
ggtitle("Residuals vs Leverage")
grid.arrange(first, third, second, fourth, nrow = 2)
library(grid)
library(lattice)
grid.arrange(first, third, second, fourth, nrow = 2)
rm(list=ls())
library(GGally)
library(qqplotr)
library(corrplot)
library(car)
library(reshape)
library(tidyverse)
rm(list=ls())
library(GGally)
library(qqplotr)
library(corrplot)
library(car)
library(reshape)
library(tidyverse)
library(magrittr)
library(dplyr)
library(betareg)
library(statmod)
library(jtools)
library(numDeriv)
library(latex2exp)
library(broom.mixed)
library(gridExtra)
library(grid)
library(lattice)
library(ggplot2)
if (Sys.getenv('USER') == "mortenjohnsen"){
setwd("/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/")
figpath <- "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/figs/"
}else if (Sys.getenv('USER') == "freja"){
setwd("~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments")
figpath <- "~/Documents/Uni/TiendeSemester/Adv. data analysis and stat. modelling/02424---Assignments/Assignment 2/figs/"
}else{
setwd("C:/Users/catdu/OneDrive/DTU/10. semester/Advanced Dataanalysis and Statistical Modelling/Assignment 1/02424---Assignments/")
}
earinfect <- read.table("Assignment 2/earinfect.txt", header = T)
clothing <- read.csv(file = "Assignment 2/clothing.csv", header = T)
#### Clothing ####
#1)
c.data <- dplyr::select(clothing, -subjId, -day, -time, -X)
head(c.data)
melt(c.data) %>%
ggplot()+
geom_histogram(aes(x = value, fill = sex), position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
facet_wrap(~variable, scales = "free")+
theme_bw()
ggsave(paste0(figpath,"clothing_data_histograms.png"), width = 30, height = 10, units = "cm")
#### 1) Distributions
beta.dist <- function(theta){
return(-sum(dbeta(c.data$clo, shape1 = theta[1], shape2 = theta[2], log = T)))
}
norm.dist <- function(theta){
return(-sum(dnorm(c.data$clo, mean = theta[1], sd = theta[2], log = T)))
}
gamma.dist <- function(theta){
return(-sum(dgamma(c.data$clo, shape = theta[1], rate = theta[2], log = T)))
}
invgaus.dist <- function(theta){
return(-sum(dinvgauss(c.data$clo, mean = theta[1], dispersion = theta[2], log =T)))
}
lnorm.dist <- function(theta){
return(-sum(dlnorm(x=c.data$clo, meanlog = theta[1], sdlog = theta[2], log = T)))
}
beta.hat <- nlminb(start = c(1,1), objective = beta.dist)
norm.hat <- nlminb(start = c(1,1), objective = norm.dist)
gamma.hat <- nlminb(start = c(1,1), objective = gamma.dist)
invgaus.hat <- nlminb(start = c(1,1), objective = invgaus.dist)
lnorm.hat <- nlminb(start = c(1,1), objective = lnorm.dist)
ggplot(c.data)+
geom_histogram(aes(x = clo, y = after_stat(density)), colour = "white", position = "identity", alpha = 0.4)+
scale_fill_manual(values = c("blue", "orange"))+
stat_function(aes(colour = "1: beta"), fun = dbeta, args = list(shape1 = beta.hat$par[1],shape2 = beta.hat$par[2]))+
stat_function(aes(colour = "2: normal"), fun = dnorm, args = list(mean = norm.hat$par[1], sd = norm.hat$par[2]))+
stat_function(aes(colour = "3: gamma"), fun = dgamma, args = list(shape = gamma.hat$par[1],rate = gamma.hat$par[2]))+
stat_function(aes(colour = "4: gamma"), fun = dinvgauss, args = list(mean = invgaus.hat$par[1],dispersion = invgaus.hat$par[2]))+
stat_function(aes(colour = "5: log-normal"), fun = dlnorm, args = list(meanlog = lnorm.hat$par[1],sdlog = lnorm.hat$par[2]))+
theme_bw()+
labs(y = "", colour = "Distribution")+
scale_colour_manual(values = c("blue", "orange", "black", "red", "purple", "grey"), labels = c(paste0("Beta [AIC: ",round(2*beta.hat$objective + 2*length(beta.hat$par),3),"]"),
paste0("Normal [AIC: ",round(2*norm.hat$objective + 2*length(norm.hat$par),3),"]"),
paste0("Gamma [AIC: ",round(2*gamma.hat$objective + 2*length(gamma.hat$par),3),"]"),
paste0("Inv Gauss [AIC: ",round(2*invgaus.hat$objective + 2*length(invgaus.hat$par),3),"]"),
paste0("Log-normal [AIC: ",round(2*lnorm.hat$objective + 2*length(lnorm.hat$par),3),"]")))+
ggtitle("Clothing insulation level")
ggsave(paste0(figpath,"distribution_choice_1.png"), width = 20, height = 10, units = "cm")
#gamma is best (HUSK clo må gerne være > 1, det er ikke en fraktion).
fit.gamma <- glm(clo ~ tOut + tInOp + sex, data = c.data, family = Gamma(link = "cloglog"))
add1(object = fit.gamma, scope = ~.+tOut:sex+tInOp:sex+tOut:tInOp, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.+tOut:sex)
Anova(fit.gamma, type = "III", test = "LR")
add1(object = fit.gamma, scope = ~.+tInOp:sex+tOut:tInOp, test = "Chisq")
drop1(object = fit.gamma, test = "Chisq")
fit.gamma <- update(fit.gamma, .~.-tInOp)
anova(fit.gamma, test = "Chisq")
Anova(fit.gamma, type = "III", test = "LR")
#goodness of fit:
pchisq(deviance(fit.gamma), df = dim(c.data)[1] - length(coefficients(fit.gamma)), lower.tail = F)
#er passende
summary(fit.gamma)
1 - pchisq(48.344,df=799) ## pass the goodness of fit.
confint(fit.gamma)
#Manuelt
glm.gamma.w <- function(theta){
y <- c.data$clo
k <- 1/theta[5]
eta <- theta[1] + theta[2] * c.data$tOut + theta[3] * as.numeric(c.data$sex == "male") + theta[4] * as.numeric(c.data$sex == "male") * c.data$tOut
mu <- 1-exp(-exp(eta))
#using deviance
#d <- 2*(y/mu - log(y/mu) - 1)
#return(1/2 * sum(w*d))
#using pdf and log-likelihood
nll <- -sum(dgamma(y, shape = k, scale = mu/k, log = T))
return(nll)
}
manual.fit <- nlminb(start = c(0,0,0,0,1), objective = glm.gamma.w)
manual.sd <- sqrt(diag(solve(hessian(func = glm.gamma.w, x = manual.fit$par))))
manual.fit$par
manual.sd
summary(fit.gamma)
#Det er mere eller mindre det samme, det er vist kun dispersion parameter der er lidt anderleedes
(AIC_manuel <- manual.fit$objective*2 + 5*2)
#### 2) residual analysis
par(mfrow=c(2,2))
postscript(file.path(getwd(), "fit.gamma.eps"), horizontal = FALSE, onefile = FALSE, paper = "special",height = 10, width = 10)
#png(filename = "/Users/mortenjohnsen/OneDrive - Danmarks Tekniske Universitet/DTU/10. Semester/02424 - Advanced Dataanalysis and Statistical Modellling/02424---Assignments/Assignment 2/residual_analysis_1.png", width = 20, height = 10, units = "cm", res = 1000)
plot(fit.gamma, pch = 16)
#dev.off()
c.data$residuals <- fit.gamma$residuals
c.data$leverage <- hatvalues(fit.gamma)
#gender-specific residual analysis
c.data$pred <- predict(fit.gamma)
c.data$pearson <- residuals(fit.gamma, type = "pearson")
sigma_sq <- fit.gamma$deviance / (dim(c.data)[1] - length(coefficients(fit.gamma)))
c.data$stdpearson <- c.data$pearson/sqrt(sigma_sq*(1-c.data$leverage))
first <- ggplot(c.data)+
geom_point(aes(x = pred, y = residuals))+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(aes(x = pred, y = residuals), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = "Residuals")+
ggtitle("Residuals vs Fitted")
second <- ggplot(c.data)+
geom_point(aes(x = pred, y = sqrt(stdpearson)))+
geom_smooth(aes(x=pred,y = sqrt(stdpearson)), colour = "blue", se = F)+
theme_bw()+
labs(x = "Predicted", y = TeX("$\\sqrt{Std. Pearson Residuals}$"))+
ggtitle("Scale-Location")
third <- ggplot(c.data, aes(sample = stdpearson))+
stat_qq_band(fill = "blue", alpha = 0.2)+
stat_qq_line(colour = "blue")+
stat_qq_point()+
theme_bw()+
labs(x = "Theoretical quantiles", y = "Std. Pearson Residuals")+
ggtitle("Normal QQ")
fourth <- ggplot(c.data, aes(x = leverage, y = stdpearson))+
geom_point()+
geom_hline(aes(yintercept = 0), colour = "blue", linetype = "dashed")+
geom_smooth(colour = "blue", se = F)+
theme_bw()+
labs(x = "Leverage", y = "Std. Pearson Residuals")+
ggtitle("Residuals vs Leverage")
grid.arrange(first, third, second, fourth, nrow = 2)
install.packages("ggplot2")
